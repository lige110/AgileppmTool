[{"/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/index.tsx":"1","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/reportWebVitals.ts":"2","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/App.tsx":"3","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/components/Dashborad.tsx":"4","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/components/Layout/Header.tsx":"5","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/components/Project/ProjectItem.tsx":"6","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/components/Project/CreateProjectButton.tsx":"7","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/components/Project/AddProject.tsx":"8","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/store.tsx":"9","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/reducers/index.tsx":"10","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/reducers/errorReducer.tsx":"11","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/actions/types.tsx":"12","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/actions/projectActions.tsx":"13","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/reducers/projectReducer.tsx":"14","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/components/Project/UpdateProject.tsx":"15"},{"size":500,"mtime":1607184530651,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1607184530654,"results":"18","hashOfConfig":"17"},{"size":989,"mtime":1607252651931,"results":"19","hashOfConfig":"17"},{"size":1202,"mtime":1607252033757,"results":"20","hashOfConfig":"17"},{"size":1398,"mtime":1607184530649,"results":"21","hashOfConfig":"17"},{"size":2014,"mtime":1614263685321,"results":"22","hashOfConfig":"17"},{"size":305,"mtime":1607184530649,"results":"23","hashOfConfig":"17"},{"size":5352,"mtime":1607250730855,"results":"24","hashOfConfig":"17"},{"size":959,"mtime":1607250730858,"results":"25","hashOfConfig":"17"},{"size":221,"mtime":1607250730856,"results":"26","hashOfConfig":"17"},{"size":323,"mtime":1607184530653,"results":"27","hashOfConfig":"17"},{"size":181,"mtime":1607267554201,"results":"28","hashOfConfig":"17"},{"size":1680,"mtime":1607269188233,"results":"29","hashOfConfig":"17"},{"size":881,"mtime":1607268389811,"results":"30","hashOfConfig":"17"},{"size":5209,"mtime":1607267090999,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ljnwxw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/index.tsx",[],["65","66"],"/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/reportWebVitals.ts",[],"/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/App.tsx",[],"/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/components/Dashborad.tsx",[],"/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/components/Layout/Header.tsx",[],"/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/components/Project/ProjectItem.tsx",[],"/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/components/Project/CreateProjectButton.tsx",[],"/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/components/Project/AddProject.tsx",["67"],"import React, { ChangeEvent, FormEvent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport { Project } from \"../../model/Project\";\nimport classnames from \"classnames\";\n\ninterface IMyComponentState {\n  projectName: string;\n  projectIdentifier: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  errors: any;\n}\n\nclass AddProject extends React.Component<any, IMyComponentState> {\n  //   static propTypes: {\n  //     createProject: PropTypes.Validator<(...args: any[]) => any>;\n  //     errors: PropTypes.Validator<object>;\n  //   };\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // life cycle\n  componentWillReceiveProps(nextProps: any) {\n    if (nextProps.errors) {\n      this.setState({ ...this.state, errors: nextProps.errors });\n    }\n  }\n\n  onChange(\n    e: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLTextAreaElement>\n  ): void {\n    const key = e.target.name;\n    const value = e.target.value;\n\n    this.setState({ ...this.state, [key]: value });\n  }\n\n  onSubmit(e: FormEvent<HTMLFormElement>): void {\n    e.preventDefault();\n\n    const newProject: Project = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    console.log(newProject);\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier,\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// AddProject.propTypes = {\n//   createProject: PropTypes.func.isRequired,\n//   errors: PropTypes.object.isRequired,\n// };\n\nconst mapStateToProps = (state: any) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/store.tsx",[],"/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/reducers/index.tsx",[],"/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/reducers/errorReducer.tsx",[],"/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/actions/types.tsx",[],"/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/actions/projectActions.tsx",["68"],"import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_ALLPROJECTS,\n  GET_PROJECT,\n  DELETE_PROJECT,\n} from \"./types\";\nimport { Project } from \"../model/Project\";\n// import { AnyAction } from \"redux\";\n\nexport const createProject = (project: Project, history: string[]) => async (\n  // what is the dispatch here is an function argument, like resolve\n  dispatch: any\n) => {\n  try {\n    console.log(\"create projects action dispatched!\");\n    const res = await axios.post(\"/api/project\", project);\n\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjects = (history: string[]) => async (dispatch: any) => {\n  try {\n    // console.log(\"get projects action dispatched!\");\n    const projects: any = await axios.get(\"/api/project/all\");\n    dispatch({\n      type: GET_ALLPROJECTS,\n      payload: projects.data,\n    });\n    history.push(\"/dashboard\");\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getProjectById = (id: string, history: string[]) => async (\n  dispatch: any\n) => {\n  try {\n    // console.log(\"get projects action dispatched!\");\n    const res: any = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const deleteProject = (id: string) => async (dispatch: any) => {\n  await axios.delete(`/api/project/${id}`);\n  dispatch({\n    type: DELETE_PROJECT,\n    payload: id,\n  });\n};\n","/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/reducers/projectReducer.tsx",[],"/Users/mengli/Spring/PPMToolFullStack/ppmtool-react-client/src/components/Project/UpdateProject.tsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":17},{"ruleId":"73","severity":1,"message":"77","line":17,"column":11,"nodeType":"75","messageId":"76","endLine":17,"endColumn":14},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]